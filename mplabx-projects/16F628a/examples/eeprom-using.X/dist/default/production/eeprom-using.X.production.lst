

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Mon Jan 05 12:54:26 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F628A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000E                     	;# 
    24  000E                     	;# 
    25  000F                     	;# 
    26  0010                     	;# 
    27  0011                     	;# 
    28  0012                     	;# 
    29  0015                     	;# 
    30  0015                     	;# 
    31  0016                     	;# 
    32  0017                     	;# 
    33  0018                     	;# 
    34  0019                     	;# 
    35  001A                     	;# 
    36  001F                     	;# 
    37  0081                     	;# 
    38  0085                     	;# 
    39  0086                     	;# 
    40  008C                     	;# 
    41  008E                     	;# 
    42  0092                     	;# 
    43  0098                     	;# 
    44  0099                     	;# 
    45  009A                     	;# 
    46  009B                     	;# 
    47  009C                     	;# 
    48  009D                     	;# 
    49  009F                     	;# 
    50  000B                     _INTCONbits	set	11
    51  000C                     _PIR1bits	set	12
    52  0018                     _RCSTAbits	set	24
    53  0003                     _STATUSbits	set	3
    54  0019                     _TXREG	set	25
    55  009B                     _EEADR	set	155
    56  009C                     _EECON1bits	set	156
    57  009D                     _EECON2	set	157
    58  009A                     _EEDATA	set	154
    59  0099                     _SPBRG	set	153
    60  0098                     _TXSTAbits	set	152
    61                           
    62                           	psect	text0
    63  0000                     __ptext0:	
    64                           ; #config settings
    65                           
    66                           
    67                           ;psect for function _eepromRead
    68  0000                     
    69                           	psect	cinit
    70  07FE                     start_initialization:	
    71  07FE                     __initialization:	
    72  07FE                     end_of_initialization:	
    73                           ;End of C runtime variable initialization code
    74                           
    75  07FE                     __end_of__initialization:	
    76  07FE  0183               	clrf	3
    77  07FF  2FA7               	ljmp	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMMON
    80  0070                     __pcstackCOMMON:	
    81  0070                     ?_usartInit:	
    82  0070                     ??_usartInit:	
    83                           ; 0 bytes @ 0x0
    84                           
    85  0070                     ?_usartSend:	
    86                           ; 0 bytes @ 0x0
    87                           
    88  0070                     ??_usartSend:	
    89                           ; 0 bytes @ 0x0
    90                           
    91  0070                     ?_eepromWrite:	
    92                           ; 0 bytes @ 0x0
    93                           
    94  0070                     ??_eepromRead:	
    95                           ; 0 bytes @ 0x0
    96                           
    97  0070                     ?_eepromRead:	
    98                           ; 0 bytes @ 0x0
    99                           
   100  0070                     ?_main:	
   101                           ; 1 bytes @ 0x0
   102                           
   103  0070                     usartSend@data:	
   104                           ; 2 bytes @ 0x0
   105                           
   106  0070                     eepromWrite@data:	
   107                           ; 1 bytes @ 0x0
   108                           
   109  0070                     eepromRead@address:	
   110                           ; 1 bytes @ 0x0
   111                           
   112                           
   113                           ; 1 bytes @ 0x0
   114  0070                     	ds	1
   115  0071                     ??_eepromWrite:	
   116  0071                     eepromWrite@address:	
   117                           ; 0 bytes @ 0x1
   118                           
   119                           
   120                           ; 1 bytes @ 0x1
   121  0071                     	ds	1
   122  0072                     ??_main:	
   123                           
   124                           ; 0 bytes @ 0x2
   125  0072                     	ds	3
   126                           
   127                           	psect	maintext
   128  07A7                     __pmaintext:	
   129 ;;
   130 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   131 ;;
   132 ;; *************** function _main *****************
   133 ;; Defined at:
   134 ;;		line 45 in file "main.c"
   135 ;; Parameters:    Size  Location     Type
   136 ;;		None
   137 ;; Auto vars:     Size  Location     Type
   138 ;;		None
   139 ;; Return value:  Size  Location     Type
   140 ;;                  2   50[COMMON] int 
   141 ;; Registers used:
   142 ;;		wreg, status,2, status,0, pclath, cstack
   143 ;; Tracked objects:
   144 ;;		On entry : 17F/0
   145 ;;		On exit  : 0/0
   146 ;;		Unchanged: 0/0
   147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   148 ;;      Params:         0       0       0       0
   149 ;;      Locals:         0       0       0       0
   150 ;;      Temps:          3       0       0       0
   151 ;;      Totals:         3       0       0       0
   152 ;;Total ram usage:        3 bytes
   153 ;; Hardware stack levels required when called:    1
   154 ;; This function calls:
   155 ;;		_eepromRead
   156 ;;		_eepromWrite
   157 ;;		_usartInit
   158 ;;		_usartSend
   159 ;; This function is called by:
   160 ;;		Startup code after reset
   161 ;; This function uses a non-reentrant model
   162 ;;
   163                           
   164                           
   165                           ;psect for function _main
   166  07A7                     _main:	
   167                           
   168                           ;main.c: 46: usartInit();
   169                           
   170                           ;incstack = 0
   171                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   172  07A7  2770               	fcall	_usartInit
   173                           
   174                           ;main.c: 47: eepromWrite(0x01, 'Y');
   175  07A8  3059               	movlw	89
   176  07A9  00F2               	movwf	??_main
   177  07AA  0872               	movf	??_main,w
   178  07AB  00F0               	movwf	eepromWrite@data
   179  07AC  3001               	movlw	1
   180  07AD  278F               	fcall	_eepromWrite
   181                           
   182                           ;main.c: 48: eepromWrite(0x02, 'e');
   183  07AE  3065               	movlw	101
   184  07AF  00F2               	movwf	??_main
   185  07B0  0872               	movf	??_main,w
   186  07B1  00F0               	movwf	eepromWrite@data
   187  07B2  3002               	movlw	2
   188  07B3  278F               	fcall	_eepromWrite
   189                           
   190                           ;main.c: 49: eepromWrite(0x03, 's');
   191  07B4  3073               	movlw	115
   192  07B5  00F2               	movwf	??_main
   193  07B6  0872               	movf	??_main,w
   194  07B7  00F0               	movwf	eepromWrite@data
   195  07B8  3003               	movlw	3
   196  07B9  278F               	fcall	_eepromWrite
   197                           
   198                           ;main.c: 50: eepromWrite(0x04, 'h');
   199  07BA  3068               	movlw	104
   200  07BB  00F2               	movwf	??_main
   201  07BC  0872               	movf	??_main,w
   202  07BD  00F0               	movwf	eepromWrite@data
   203  07BE  3004               	movlw	4
   204  07BF  278F               	fcall	_eepromWrite
   205                           
   206                           ;main.c: 51: eepromWrite(0x05, 'u');
   207  07C0  3075               	movlw	117
   208  07C1  00F2               	movwf	??_main
   209  07C2  0872               	movf	??_main,w
   210  07C3  00F0               	movwf	eepromWrite@data
   211  07C4  3005               	movlw	5
   212  07C5  278F               	fcall	_eepromWrite
   213                           
   214                           ;main.c: 52: eepromWrite(0x06, 'a');
   215  07C6  3061               	movlw	97
   216  07C7  00F2               	movwf	??_main
   217  07C8  0872               	movf	??_main,w
   218  07C9  00F0               	movwf	eepromWrite@data
   219  07CA  3006               	movlw	6
   220  07CB  278F               	fcall	_eepromWrite
   221                           
   222                           ;main.c: 53: eepromWrite(0x07, '!');
   223  07CC  3021               	movlw	33
   224  07CD  00F2               	movwf	??_main
   225  07CE  0872               	movf	??_main,w
   226  07CF  00F0               	movwf	eepromWrite@data
   227  07D0  3007               	movlw	7
   228  07D1  278F               	fcall	_eepromWrite
   229                           
   230                           ;main.c: 54: eepromWrite(0x08, '\n');
   231  07D2  300A               	movlw	10
   232  07D3  00F2               	movwf	??_main
   233  07D4  0872               	movf	??_main,w
   234  07D5  00F0               	movwf	eepromWrite@data
   235  07D6  3008               	movlw	8
   236  07D7  278F               	fcall	_eepromWrite
   237  07D8                     l51:	
   238                           ;main.c: 55: while (1) {
   239                           
   240                           
   241                           ;main.c: 56: usartSend(eepromRead(0x01));
   242  07D8  3001               	movlw	1
   243  07D9  277F               	fcall	_eepromRead
   244  07DA  2768               	fcall	_usartSend
   245                           
   246                           ;main.c: 57: usartSend(eepromRead(0x02));
   247  07DB  3002               	movlw	2
   248  07DC  277F               	fcall	_eepromRead
   249  07DD  2768               	fcall	_usartSend
   250                           
   251                           ;main.c: 58: usartSend(eepromRead(0x03));
   252  07DE  3003               	movlw	3
   253  07DF  277F               	fcall	_eepromRead
   254  07E0  2768               	fcall	_usartSend
   255                           
   256                           ;main.c: 59: usartSend(eepromRead(0x04));
   257  07E1  3004               	movlw	4
   258  07E2  277F               	fcall	_eepromRead
   259  07E3  2768               	fcall	_usartSend
   260                           
   261                           ;main.c: 60: usartSend(eepromRead(0x05));
   262  07E4  3005               	movlw	5
   263  07E5  277F               	fcall	_eepromRead
   264  07E6  2768               	fcall	_usartSend
   265                           
   266                           ;main.c: 61: usartSend(eepromRead(0x06));
   267  07E7  3006               	movlw	6
   268  07E8  277F               	fcall	_eepromRead
   269  07E9  2768               	fcall	_usartSend
   270                           
   271                           ;main.c: 62: usartSend(eepromRead(0x07));
   272  07EA  3007               	movlw	7
   273  07EB  277F               	fcall	_eepromRead
   274  07EC  2768               	fcall	_usartSend
   275                           
   276                           ;main.c: 63: usartSend(eepromRead(0x08));
   277  07ED  3008               	movlw	8
   278  07EE  277F               	fcall	_eepromRead
   279  07EF  2768               	fcall	_usartSend
   280                           
   281                           ;main.c: 64: _delay((unsigned long)((2000)*(4000000UL/4000.0)));
   282  07F0  300B               	movlw	11
   283  07F1  00F4               	movwf	??_main+2
   284  07F2  3026               	movlw	38
   285  07F3  00F3               	movwf	??_main+1
   286  07F4  3066               	movlw	102
   287  07F5  00F2               	movwf	??_main
   288  07F6                     u47:	
   289  07F6  0BF2               	decfsz	??_main,f
   290  07F7  2FF6               	goto	u47
   291  07F8  0BF3               	decfsz	??_main+1,f
   292  07F9  2FF6               	goto	u47
   293  07FA  0BF4               	decfsz	??_main+2,f
   294  07FB  2FF6               	goto	u47
   295  07FC  2FFD               	nop2
   296  07FD  2FD8               	goto	l51
   297  07FE                     __end_of_main:	
   298                           ;main.c: 65: }
   299                           ;main.c: 66: return 1;
   300                           ;	Return value of _main is never used
   301                           
   302                           
   303                           	psect	text1
   304  0768                     __ptext1:	
   305 ;; *************** function _usartSend *****************
   306 ;; Defined at:
   307 ;;		line 40 in file "usart-mallon.h"
   308 ;; Parameters:    Size  Location     Type
   309 ;;  data            1    wreg     const unsigned char 
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  data            1    0[COMMON] const unsigned char 
   312 ;; Return value:  Size  Location     Type
   313 ;;		None               void
   314 ;; Registers used:
   315 ;;		wreg
   316 ;; Tracked objects:
   317 ;;		On entry : 0/0
   318 ;;		On exit  : 0/0
   319 ;;		Unchanged: 0/0
   320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   321 ;;      Params:         0       0       0       0
   322 ;;      Locals:         1       0       0       0
   323 ;;      Temps:          0       0       0       0
   324 ;;      Totals:         1       0       0       0
   325 ;;Total ram usage:        1 bytes
   326 ;; Hardware stack levels used:    1
   327 ;; This function calls:
   328 ;;		Nothing
   329 ;; This function is called by:
   330 ;;		_main
   331 ;;		_usartPutString
   332 ;; This function uses a non-reentrant model
   333 ;;
   334                           
   335                           
   336                           ;psect for function _usartSend
   337  0768                     _usartSend:	
   338                           
   339                           ;incstack = 0
   340                           ; Regs used in _usartSend: [wreg]
   341                           ;usartSend@data stored from wreg
   342  0768  00F0               	movwf	usartSend@data
   343  0769                     l30:	
   344                           ;usart-mallon.h: 41: while (!PIR1bits.TXIF);
   345                           
   346  0769  1283               	bcf	3,5	;RP0=0, select bank0
   347  076A  1303               	bcf	3,6	;RP1=0, select bank0
   348  076B  1E0C               	btfss	12,4	;volatile
   349  076C  2F69               	goto	l30
   350                           
   351                           ;usart-mallon.h: 42: TXREG = data;
   352  076D  0870               	movf	usartSend@data,w
   353  076E  0099               	movwf	25	;volatile
   354  076F  0008               	return
   355  0770                     __end_of_usartSend:	
   356                           
   357                           	psect	text2
   358  0770                     __ptext2:	
   359 ;; *************** function _usartInit *****************
   360 ;; Defined at:
   361 ;;		line 25 in file "usart-mallon.h"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;		None               void
   368 ;; Registers used:
   369 ;;		wreg
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   375 ;;      Params:         0       0       0       0
   376 ;;      Locals:         0       0       0       0
   377 ;;      Temps:          0       0       0       0
   378 ;;      Totals:         0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _usartInit
   390  0770                     _usartInit:	
   391                           
   392                           ;usart-mallon.h: 26: SPBRG = ((4000000UL / (9600 * 16UL)) -1);
   393                           
   394                           ;incstack = 0
   395                           ; Regs used in _usartInit: [wreg]
   396  0770  3019               	movlw	25
   397  0771  1683               	bsf	3,5	;RP0=1, select bank1
   398  0772  1303               	bcf	3,6	;RP1=0, select bank1
   399  0773  0099               	movwf	25	;volatile
   400                           
   401                           ;usart-mallon.h: 28: TXSTAbits.BRGH = 1;
   402  0774  1518               	bsf	24,2	;volatile
   403                           
   404                           ;usart-mallon.h: 29: TXSTAbits.SYNC = 0;
   405  0775  1218               	bcf	24,4	;volatile
   406                           
   407                           ;usart-mallon.h: 30: TXSTAbits.TX9 = 0;
   408  0776  1318               	bcf	24,6	;volatile
   409                           
   410                           ;usart-mallon.h: 31: TXSTAbits.TXEN = 1;
   411  0777  1698               	bsf	24,5	;volatile
   412                           
   413                           ;usart-mallon.h: 33: RCSTAbits.ADEN = 0;
   414  0778  1283               	bcf	3,5	;RP0=0, select bank0
   415  0779  1303               	bcf	3,6	;RP1=0, select bank0
   416  077A  1198               	bcf	24,3	;volatile
   417                           
   418                           ;usart-mallon.h: 34: RCSTAbits.RX9 = 0;
   419  077B  1318               	bcf	24,6	;volatile
   420                           
   421                           ;usart-mallon.h: 35: RCSTAbits.SPEN = 1;
   422  077C  1798               	bsf	24,7	;volatile
   423                           
   424                           ;usart-mallon.h: 36: RCSTAbits.CREN = 1;
   425  077D  1618               	bsf	24,4	;volatile
   426  077E  0008               	return
   427  077F                     __end_of_usartInit:	
   428                           
   429                           	psect	text3
   430  078F                     __ptext3:	
   431 ;; *************** function _eepromWrite *****************
   432 ;; Defined at:
   433 ;;		line 22 in file "main.c"
   434 ;; Parameters:    Size  Location     Type
   435 ;;  address         1    wreg     unsigned char 
   436 ;;  data            1    0[COMMON] unsigned char 
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  address         1    1[COMMON] unsigned char 
   439 ;; Return value:  Size  Location     Type
   440 ;;		None               void
   441 ;; Registers used:
   442 ;;		wreg
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   448 ;;      Params:         1       0       0       0
   449 ;;      Locals:         1       0       0       0
   450 ;;      Temps:          0       0       0       0
   451 ;;      Totals:         2       0       0       0
   452 ;;Total ram usage:        2 bytes
   453 ;; Hardware stack levels used:    1
   454 ;; This function calls:
   455 ;;		Nothing
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461                           
   462                           ;psect for function _eepromWrite
   463  078F                     _eepromWrite:	
   464                           
   465                           ;incstack = 0
   466                           ; Regs used in _eepromWrite: [wreg]
   467                           ;eepromWrite@address stored from wreg
   468  078F  00F1               	movwf	eepromWrite@address
   469                           
   470                           ;main.c: 23: EEDATA = data;
   471  0790  0870               	movf	eepromWrite@data,w
   472  0791  1683               	bsf	3,5	;RP0=1, select bank1
   473  0792  1303               	bcf	3,6	;RP1=0, select bank1
   474  0793  009A               	movwf	26	;volatile
   475                           
   476                           ;main.c: 24: EEADR = address;
   477  0794  0871               	movf	eepromWrite@address,w
   478  0795  009B               	movwf	27	;volatile
   479                           
   480                           ;main.c: 25: STATUSbits.RP0 = 1;
   481  0796  1283               	bcf	3,5	;RP0=0, select bank0
   482  0797  1303               	bcf	3,6	;RP1=0, select bank0
   483  0798  1683               	bsf	3,5	;volatile
   484                           
   485                           ;main.c: 26: EECON1bits.WREN = 1;
   486  0799  1683               	bsf	3,5	;RP0=1, select bank1
   487  079A  1303               	bcf	3,6	;RP1=0, select bank1
   488  079B  151C               	bsf	28,2	;volsfr
   489                           
   490                           ;main.c: 27: INTCONbits.GIE = 0;
   491  079C  138B               	bcf	11,7	;volatile
   492                           
   493                           ;main.c: 28: EECON2 = 0x55;
   494  079D  3055               	movlw	85
   495  079E  009D               	movwf	29	;volsfr
   496                           
   497                           ;main.c: 29: EECON2 = 0xAA;
   498  079F  30AA               	movlw	170
   499  07A0  009D               	movwf	29	;volsfr
   500                           
   501                           ;main.c: 30: EECON1bits.WR = 1;
   502  07A1  149C               	bsf	28,1	;volsfr
   503  07A2                     l42:	
   504                           ;main.c: 31: while (EECON1bits.WR);
   505                           
   506  07A2  189C               	btfsc	28,1	;volsfr
   507  07A3  2FA2               	goto	l42
   508                           
   509                           ;main.c: 32: EECON1bits.WREN = 0;
   510  07A4  111C               	bcf	28,2	;volsfr
   511                           
   512                           ;main.c: 33: INTCONbits.GIE = 1;
   513  07A5  178B               	bsf	11,7	;volatile
   514  07A6  0008               	return
   515  07A7                     __end_of_eepromWrite:	
   516                           
   517                           	psect	text4
   518  077F                     __ptext4:	
   519 ;; *************** function _eepromRead *****************
   520 ;; Defined at:
   521 ;;		line 37 in file "main.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  address         1    wreg     unsigned char 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  address         1    0[COMMON] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  1    wreg      unsigned char 
   528 ;; Registers used:
   529 ;;		wreg
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   535 ;;      Params:         0       0       0       0
   536 ;;      Locals:         1       0       0       0
   537 ;;      Temps:          0       0       0       0
   538 ;;      Totals:         1       0       0       0
   539 ;;Total ram usage:        1 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           
   549                           ;psect for function _eepromRead
   550  077F                     _eepromRead:	
   551                           
   552                           ;incstack = 0
   553                           ; Regs used in _eepromRead: [wreg]
   554                           ;eepromRead@address stored from wreg
   555  077F  00F0               	movwf	eepromRead@address
   556                           
   557                           ;main.c: 38: STATUSbits.RP0 = 1;
   558  0780  1283               	bcf	3,5	;RP0=0, select bank0
   559  0781  1303               	bcf	3,6	;RP1=0, select bank0
   560  0782  1683               	bsf	3,5	;volatile
   561                           
   562                           ;main.c: 39: EEADR = address;
   563  0783  0870               	movf	eepromRead@address,w
   564  0784  1683               	bsf	3,5	;RP0=1, select bank1
   565  0785  1303               	bcf	3,6	;RP1=0, select bank1
   566  0786  009B               	movwf	27	;volatile
   567                           
   568                           ;main.c: 40: EECON1bits.RD = 1;
   569  0787  141C               	bsf	28,0	;volsfr
   570                           
   571                           ;main.c: 41: STATUSbits.RP0 = 0;
   572  0788  1283               	bcf	3,5	;RP0=0, select bank0
   573  0789  1303               	bcf	3,6	;RP1=0, select bank0
   574  078A  1283               	bcf	3,5	;volatile
   575                           
   576                           ;main.c: 42: return EEDATA;
   577  078B  1683               	bsf	3,5	;RP0=1, select bank1
   578  078C  1303               	bcf	3,6	;RP1=0, select bank1
   579  078D  081A               	movf	26,w	;volatile
   580  078E  0008               	return
   581  078F                     __end_of_eepromRead:	
   582  007E                     btemp	set	126	;btemp
   583  007E                     wtemp	set	126
   584  007E                     wtemp0	set	126
   585  0080                     wtemp1	set	128
   586  0082                     wtemp2	set	130
   587  0084                     wtemp3	set	132
   588  0086                     wtemp4	set	134
   589  0088                     wtemp5	set	136
   590  007F                     wtemp6	set	127
   591  007E                     ttemp	set	126
   592  007E                     ttemp0	set	126
   593  0081                     ttemp1	set	129
   594  0084                     ttemp2	set	132
   595  0087                     ttemp3	set	135
   596  007F                     ttemp4	set	127
   597  007E                     ltemp	set	126
   598  007E                     ltemp0	set	126
   599  0082                     ltemp1	set	130
   600  0086                     ltemp2	set	134
   601  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_eepromWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     404
                                              2 COMMON     3     3      0
                         _eepromRead
                        _eepromWrite
                          _usartInit
                          _usartSend
 ---------------------------------------------------------------------------------
 (1) _usartSend                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _usartInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eepromWrite                                          2     1      1     374
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _eepromRead                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _eepromRead
   _eepromWrite
   _usartInit
   _usartSend

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Mon Jan 05 12:54:26 2015

            __CFG_CP$OFF 0000                       l30 0769                       l42 07A2  
                     l51 07D8                       u47 07F6             __CFG_CPD$OFF 0000  
           __CFG_LVP$OFF 0000                     _main 07A7                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E            __CFG_MCLRE$ON 0000  
                  ?_main 0070                    _EEADR 009B            __CFG_WDTE$OFF 0000  
                  _SPBRG 0099                    _TXREG 0019            __CFG_PWRTE$ON 0000  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FE  
           __end_of_main 07FE                   ??_main 0072                   _EEDATA 009A  
                 _EECON2 009D     __size_of_eepromWrite 0018          eepromWrite@data 0070  
__end_of__initialization 07FE           __pcstackCOMMON 0070        eepromRead@address 0070  
             __pmaintext 07A7               _eepromRead 077F       __size_of_usartInit 000F  
     __size_of_usartSend 0008                  __ptext0 0000                  __ptext1 0768  
                __ptext2 0770                  __ptext3 078F                  __ptext4 077F  
   end_of_initialization 07FE                _RCSTAbits 0018        __end_of_usartInit 077F  
      __end_of_usartSend 0770              ?_eepromRead 0070            ??_eepromWrite 0071  
              _TXSTAbits 0098      start_initialization 07FE      __size_of_eepromRead 0010  
          usartSend@data 0070      __end_of_eepromWrite 07A7                ___latbits 0000  
     eepromWrite@address 0071              _eepromWrite 078F                 _PIR1bits 000C  
           ??_eepromRead 0070                _usartInit 0770                _usartSend 0768  
             _EECON1bits 009C       __end_of_eepromRead 078F               ?_usartInit 0070  
             ?_usartSend 0070            __size_of_main 0057               _INTCONbits 000B  
            ??_usartInit 0070              ??_usartSend 0070       __CFG_FOSC$INTOSCIO 0000  
             _STATUSbits 0003             ?_eepromWrite 0070  
